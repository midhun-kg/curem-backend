AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Curem Malaria Detection Backend

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 10
    MemorySize: 128
    Architectures:
      - x86_64
    # Apply the Layer and Environment variables to all functions globally.
    # This now works because the functions are in the same template.
    Layers:
      - !Ref UtilsLayer
    Environment:
      Variables:
        USERS_TABLE: curem-users
        JWT_SECRET: curem-signing-secret

Resources:
  # --- The Layer ---
  UtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: utils-layer
      Description: Shared helpers like dbClient and response()
      ContentUri: src/layers/utils/nodejs/
      CompatibleRuntimes:
        - nodejs18.x
        - nodejs20.x
    Metadata:
    # This tells SAM to run 'npm install' inside the ContentUri folder
      BuildMethod: nodejs20.x

  # --- DynamoDB Tables (from your other nested stack) ---
  TablesResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: stacks/dynamodb-tables.yaml

  # --- Auth Functions (Moved from the nested stack into this file) ---
  SignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      # CodeUri now points directly to the auth functions' folder
      CodeUri: .
      Handler: src/functions/auth/signup.handler
      Events:
        SignupAPI:
          Type: Api
          Properties:
            Path: /auth/signup
            Method: post

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/auth/login.handler
      Events:
        LoginAPI:
          Type: Api
          Properties:
            Path: /auth/login
            Method: post

  LogoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/functions/auth/logout.handler
      Events:
        LogoutAPI:
          Type: Api
          Properties:
            Path: /auth/logout
            Method: post

Outputs:
  # This makes the API endpoint visible after deployment
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stages"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.aclmazonaws.com/Prod"