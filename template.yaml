AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Curem Malaria Detection Backend

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 10
    MemorySize: 128
    Architectures:
      - x86_64
    Layers:
      - !Ref UtilsLayer
    Environment:
      Variables:
        USERS_TABLE: curem-users
        JWT_SECRET: curem-signing-secret
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'https://main.d325hmvqcsbv56.amplifyapp.com'"

Resources:
  # --- The Shared Layer ---
  UtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: utils-layer
      Description: Shared helpers like dbClient and response()
      ContentUri: src/layers/utils/nodejs/
      CompatibleRuntimes:
        - nodejs18.x
        - nodejs20.x
    Metadata:
      BuildMethod: nodejs20.x

  # --- The S3 Bucket for Image Uploads ---
  ImageUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: curem-image-bucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - PUT
              - POST
              - GET
            AllowedOrigins:
              - '*' # In production, change to your actual web app's domain
            MaxAge: 3000

  # --- DynamoDB Tables (Nested Stack) ---
  TablesResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: stacks/dynamodb-tables.yaml

  # --- Auth Functions ---
  SignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/auth/
      Handler: signup.handler
      Events:
        SignupAPI:
          Type: Api
          Properties:
            Path: /auth/signup
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "curem-users"

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/auth/
      Handler: login.handler
      Events:
        LoginAPI:
          Type: Api
          Properties:
            Path: /auth/login
            Method: post
      Policies:
        - DynamoDBReadPolicy:
            TableName: "curem-users"

  LogoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/auth/
      Handler: logout.handler
      Events:
        LogoutAPI:
          Type: Api
          Properties:
            Path: /auth/logout
            Method: post

  # --- Other Business Logic Functions ---
  SubmitAnalysisFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/analysis/
      Handler: submitAnalysis.handler
      Events:
        SubmitAnalysisAPI:
          Type: Api
          Properties:
            Path: /analysis
            Method: post
      Environment:
        Variables:
          ANALYSIS_TABLE: curem-analysis
          UPLOAD_BUCKET: !Ref ImageUploadBucket # Reference the bucket resource
          REGION: ap-south-1
      Policies:
        - DynamoDBCrudPolicy:
            TableName: curem-analysis
        - S3WritePolicy:
            BucketName: !Ref ImageUploadBucket # Reference the bucket resource

  ManagePatientsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/patients/
      Handler: manage.handler
      Events:
        PatientsApiRoot:
          Type: Api
          Properties:
            Path: /patients
            Method: ANY
        PatientsApiById:
          Type: Api
          Properties:
            Path: /patients/{patientId}
            Method: ANY
      Environment:
        Variables:
          PATIENTS_TABLE: curem-patients
      Policies:
        - DynamoDBCrudPolicy:
            TableName: curem-patients

  ManageDevicesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/devices/
      Handler: manage.handler
      Events:
        DevicesApiRoot:
          Type: Api
          Properties:
            Path: /devices
            Method: ANY
        DevicesApiById:
          Type: Api
          Properties:
            Path: /devices/{deviceId}
            Method: ANY
      Environment:
        Variables:
          DEVICES_TABLE: curem-devices
          JWT_SECRET: curem-signing-secret # Note: This is duplicated from Globals
      Policies:
        - DynamoDBCrudPolicy:
            TableName: curem-devices

  ManageReportsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/reports/
      Handler: manage.handler
      Events:
        GetReportsByUser:
          Type: Api
          Properties:
            Path: /reports/user/{userId}
            Method: get
        GetReportsByPatient:
          Type: Api
          Properties:
            Path: /reports/patient/{patientId}
            Method: get
        GetReportById:
          Type: Api
          Properties:
            Path: /reports/{reportId}
            Method: get
      Environment:
        Variables:
          REPORTS_TABLE: curem-reports
      Policies:
        - DynamoDBReadPolicy:
            TableName: curem-reports

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"